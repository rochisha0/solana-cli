{"ast":null,"code":"var _jsxFileName = \"/home/rochisha/solana-token-ui/src/components/TransferToken.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, Transaction, sendAndConfirmTransaction } from '@solana/web3.js';\nimport { createTransferInstruction, getAssociatedTokenAddress } from '@solana/spl-token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransferToken = () => {\n  _s();\n  const [mintAddress, setMintAddress] = useState('');\n  const [destination, setDestination] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n  const transferToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n\n    // Airdrop SOL to the payer account for testing\n    await connection.requestAirdrop(payer.publicKey, 2e9);\n    const mint = new PublicKey(mintAddress);\n    const sourceTokenAccount = await getAssociatedTokenAddress(mint, payer.publicKey);\n    const destinationTokenAccount = await getAssociatedTokenAddress(mint, new PublicKey(destination));\n    const transaction = new Transaction().add(createTransferInstruction(sourceTokenAccount, destinationTokenAccount, payer.publicKey, amount));\n    try {\n      await sendAndConfirmTransaction(connection, transaction, [payer]);\n      setMessage(`Transferred ${amount} tokens to ${destinationTokenAccount.toBase58()}`);\n    } catch (error) {\n      console.error('Transaction error:', error);\n      setMessage('Transfer transaction failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mint Address\",\n      value: mintAddress,\n      onChange: e => setMintAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Destination Address\",\n      value: destination,\n      onChange: e => setDestination(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: transferToken,\n      children: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferToken, \"CH7WnjStWbPK9ZTHhqKzC3P22Zg=\");\n_c = TransferToken;\nexport default TransferToken;\nvar _c;\n$RefreshReg$(_c, \"TransferToken\");","map":{"version":3,"names":["React","useState","Connection","Keypair","PublicKey","Transaction","sendAndConfirmTransaction","createTransferInstruction","getAssociatedTokenAddress","jsxDEV","_jsxDEV","TransferToken","_s","mintAddress","setMintAddress","destination","setDestination","amount","setAmount","message","setMessage","transferToken","connection","process","env","REACT_APP_SOLANA_NETWORK","payer","generate","requestAirdrop","publicKey","mint","sourceTokenAccount","destinationTokenAccount","transaction","add","toBase58","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/rochisha/solana-token-ui/src/components/TransferToken.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, Transaction, sendAndConfirmTransaction } from '@solana/web3.js';\nimport { createTransferInstruction, getAssociatedTokenAddress } from '@solana/spl-token';\n\nconst TransferToken = () => {\n  const [mintAddress, setMintAddress] = useState('');\n  const [destination, setDestination] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n\n  const transferToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n\n    // Airdrop SOL to the payer account for testing\n    await connection.requestAirdrop(payer.publicKey, 2e9);\n\n    const mint = new PublicKey(mintAddress);\n    const sourceTokenAccount = await getAssociatedTokenAddress(mint, payer.publicKey);\n    const destinationTokenAccount = await getAssociatedTokenAddress(mint, new PublicKey(destination));\n\n    const transaction = new Transaction().add(\n      createTransferInstruction(\n        sourceTokenAccount,\n        destinationTokenAccount,\n        payer.publicKey,\n        amount\n      )\n    );\n\n    try {\n      await sendAndConfirmTransaction(connection, transaction, [payer]);\n      setMessage(`Transferred ${amount} tokens to ${destinationTokenAccount.toBase58()}`);\n    } catch (error) {\n      console.error('Transaction error:', error);\n      setMessage('Transfer transaction failed.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Transfer Token</h2>\n      <input \n        type=\"text\" \n        placeholder=\"Mint Address\" \n        value={mintAddress}\n        onChange={(e) => setMintAddress(e.target.value)} \n      />\n      <input \n        type=\"text\" \n        placeholder=\"Destination Address\" \n        value={destination}\n        onChange={(e) => setDestination(e.target.value)} \n      />\n      <input \n        type=\"number\" \n        placeholder=\"Amount\" \n        value={amount}\n        onChange={(e) => setAmount(e.target.value)} \n      />\n      <button onClick={transferToken}>Transfer</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default TransferToken;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}