{"ast":null,"code":"var _jsxFileName = \"/home/rochisha/solana-token-ui/src/components/MintToken.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, Transaction, sendAndConfirmTransaction } from '@solana/web3.js';\nimport { createMintToInstruction, getAssociatedTokenAddress } from '@solana/spl-token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MintToken = () => {\n  _s();\n  const [mintAddress, setMintAddress] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n  const mintToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n    const mint = new PublicKey(mintAddress);\n    const tokenAccountAddress = await getAssociatedTokenAddress(mint, payer.publicKey);\n    const transaction = new Transaction().add(createMintToInstruction(mint, tokenAccountAddress, payer.publicKey, amount));\n    await sendAndConfirmTransaction(connection, transaction, [payer]);\n    setMessage(`Minted ${amount} tokens to ${tokenAccountAddress.toBase58()}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mint Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mint Address\",\n      value: mintAddress,\n      onChange: e => setMintAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintToken,\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MintToken, \"7Yj+vbeZeh+06RT0TL4pRXaHRYg=\");\n_c = MintToken;\nexport default MintToken;\nvar _c;\n$RefreshReg$(_c, \"MintToken\");","map":{"version":3,"names":["React","useState","Connection","Keypair","PublicKey","Transaction","sendAndConfirmTransaction","createMintToInstruction","getAssociatedTokenAddress","jsxDEV","_jsxDEV","MintToken","_s","mintAddress","setMintAddress","amount","setAmount","message","setMessage","mintToken","connection","process","env","REACT_APP_SOLANA_NETWORK","payer","generate","mint","tokenAccountAddress","publicKey","transaction","add","toBase58","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/rochisha/solana-token-ui/src/components/MintToken.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, Transaction, sendAndConfirmTransaction} from '@solana/web3.js';\nimport { createMintToInstruction, getAssociatedTokenAddress } from '@solana/spl-token';\n\nconst MintToken = () => {\n  const [mintAddress, setMintAddress] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n\n  const mintToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n    const mint = new PublicKey(mintAddress);\n    const tokenAccountAddress = await getAssociatedTokenAddress(mint, payer.publicKey);\n\n    const transaction = new Transaction().add(\n      createMintToInstruction(\n        mint,\n        tokenAccountAddress,\n        payer.publicKey,\n        amount\n      )\n    );\n\n    await sendAndConfirmTransaction(connection, transaction, [payer]);\n\n    setMessage(`Minted ${amount} tokens to ${tokenAccountAddress.toBase58()}`);\n  };\n\n  return (\n    <div>\n      <h2>Mint Token</h2>\n      <input \n        type=\"text\" \n        placeholder=\"Mint Address\" \n        value={mintAddress}\n        onChange={(e) => setMintAddress(e.target.value)} \n      />\n      <input \n        type=\"number\" \n        placeholder=\"Amount\" \n        value={amount}\n        onChange={(e) => setAmount(e.target.value)} \n      />\n      <button onClick={mintToken}>Mint</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default MintToken;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,yBAAyB,QAAO,iBAAiB;AACvG,SAASC,uBAAuB,EAAEC,yBAAyB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,UAAU,GAAG,IAAIlB,UAAU,CAACmB,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;IACvE,MAAMC,KAAK,GAAGrB,OAAO,CAACsB,QAAQ,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAG,IAAItB,SAAS,CAACS,WAAW,CAAC;IACvC,MAAMc,mBAAmB,GAAG,MAAMnB,yBAAyB,CAACkB,IAAI,EAAEF,KAAK,CAACI,SAAS,CAAC;IAElF,MAAMC,WAAW,GAAG,IAAIxB,WAAW,CAAC,CAAC,CAACyB,GAAG,CACvCvB,uBAAuB,CACrBmB,IAAI,EACJC,mBAAmB,EACnBH,KAAK,CAACI,SAAS,EACfb,MACF,CACF,CAAC;IAED,MAAMT,yBAAyB,CAACc,UAAU,EAAES,WAAW,EAAE,CAACL,KAAK,CAAC,CAAC;IAEjEN,UAAU,CAAC,UAAUH,MAAM,cAAcY,mBAAmB,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;EAC5E,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAE1B,WAAY;MACnB2B,QAAQ,EAAGC,CAAC,IAAK3B,cAAc,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF1B,OAAA;MACE2B,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAExB,MAAO;MACdyB,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAExB,SAAU;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxCnB,OAAO,iBAAIP,OAAA;MAAAsB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}