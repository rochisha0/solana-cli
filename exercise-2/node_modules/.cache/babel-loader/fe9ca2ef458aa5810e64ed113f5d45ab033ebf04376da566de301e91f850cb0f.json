{"ast":null,"code":"var _jsxFileName = \"/home/rochisha/solana-token-ui/src/components/BurnToken.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport { Token } from '@solana/spl-token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BurnToken = () => {\n  _s();\n  const [mintAddress, setMintAddress] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n  const burnToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n    const mint = new PublicKey(mintAddress);\n    const token = new Token(connection, mint, TOKEN_PROGRAM_ID, payer);\n    const tokenAccount = await token.getOrCreateAssociatedAccountInfo(payer.publicKey);\n    await token.burn(tokenAccount.address, payer, [], amount);\n    setMessage(`Burned ${amount} tokens from ${tokenAccount.address.toBase58()}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Burn Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mint Address\",\n      value: mintAddress,\n      onChange: e => setMintAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: burnToken,\n      children: \"Burn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(BurnToken, \"7Yj+vbeZeh+06RT0TL4pRXaHRYg=\");\n_c = BurnToken;\nexport default BurnToken;\nvar _c;\n$RefreshReg$(_c, \"BurnToken\");","map":{"version":3,"names":["React","useState","Connection","Keypair","PublicKey","Token","jsxDEV","_jsxDEV","BurnToken","_s","mintAddress","setMintAddress","amount","setAmount","message","setMessage","burnToken","connection","process","env","REACT_APP_SOLANA_NETWORK","payer","generate","mint","token","TOKEN_PROGRAM_ID","tokenAccount","getOrCreateAssociatedAccountInfo","publicKey","burn","address","toBase58","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/rochisha/solana-token-ui/src/components/BurnToken.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport { Token } from '@solana/spl-token';\n\nconst BurnToken = () => {\n  const [mintAddress, setMintAddress] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [message, setMessage] = useState('');\n\n  const burnToken = async () => {\n    const connection = new Connection(process.env.REACT_APP_SOLANA_NETWORK);\n    const payer = Keypair.generate();\n    const mint = new PublicKey(mintAddress);\n    const token = new Token(connection, mint, TOKEN_PROGRAM_ID, payer);\n    const tokenAccount = await token.getOrCreateAssociatedAccountInfo(payer.publicKey);\n    await token.burn(tokenAccount.address, payer, [], amount);\n    setMessage(`Burned ${amount} tokens from ${tokenAccount.address.toBase58()}`);\n  };\n\n  return (\n    <div>\n      <h2>Burn Token</h2>\n      <input \n        type=\"text\" \n        placeholder=\"Mint Address\" \n        value={mintAddress}\n        onChange={(e) => setMintAddress(e.target.value)} \n      />\n      <input \n        type=\"number\" \n        placeholder=\"Amount\" \n        value={amount}\n        onChange={(e) => setAmount(e.target.value)} \n      />\n      <button onClick={burnToken}>Burn</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default BurnToken;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,iBAAiB;AAChE,SAASC,KAAK,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,UAAU,GAAG,IAAIf,UAAU,CAACgB,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;IACvE,MAAMC,KAAK,GAAGlB,OAAO,CAACmB,QAAQ,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAG,IAAInB,SAAS,CAACM,WAAW,CAAC;IACvC,MAAMc,KAAK,GAAG,IAAInB,KAAK,CAACY,UAAU,EAAEM,IAAI,EAAEE,gBAAgB,EAAEJ,KAAK,CAAC;IAClE,MAAMK,YAAY,GAAG,MAAMF,KAAK,CAACG,gCAAgC,CAACN,KAAK,CAACO,SAAS,CAAC;IAClF,MAAMJ,KAAK,CAACK,IAAI,CAACH,YAAY,CAACI,OAAO,EAAET,KAAK,EAAE,EAAE,EAAET,MAAM,CAAC;IACzDG,UAAU,CAAC,UAAUH,MAAM,gBAAgBc,YAAY,CAACI,OAAO,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC;EAC/E,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAE7B,WAAY;MACnB8B,QAAQ,EAAGC,CAAC,IAAK9B,cAAc,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF7B,OAAA;MACE8B,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAE3B,MAAO;MACd4B,QAAQ,EAAGC,CAAC,IAAK5B,SAAS,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF7B,OAAA;MAAQoC,OAAO,EAAE3B,SAAU;MAAAgB,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxCtB,OAAO,iBAAIP,OAAA;MAAAyB,QAAA,EAAIlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlCID,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}